/*
Chit No:11	     		          	 DBMS LAB
Problem Statement
PL/SQL Stored Procedure. Write a Stored Procedure namely proc_Grade for the categorization of student. If marks scored by students in examination is <=1500 and marks>=990 then student will be placed in distinction category if marks scored are between 989 and900 category is first class, if marks 899 and 825 category is Higher Second Class 
Write a PL/SQL block for using procedure created with above requirement. Stud_Marks(name, total_marks) Result(Roll,Name, Class) 
*/



delimiter #

create procedure proc_Grade(in marks int ,out class varchar(10))
begin
if marks<=1500 and marks>=990 then set class='DIST';
end if;
if marks<=989 and marks>=900 then set class='FC';
end if;
if marks<=889 and marks>=825 then set class='HSC';
end if;
if marks<=824 and marks>=750 then set class='SC';
end if;
if marks<=749 and marks>=650 then set class='PC';
end if;
if marks<=650 then set class='Fail';
end if;
end #

create function Find_Result(Roll_In int) returns varchar(20) deterministic
begin
declare marks int;
declare Grade varchar(5);
declare StuName varchar(30);
select StudentMarks.TotalMarks,StudentMarks.Name into marks,StuName from StudentMarks where StudentMarks.Roll=Roll_In;
call proc_Grade(marks,@Grade);
insert into Result values (Roll_In,StuName,@Grade);
return @Grade;
end #


------------------------------------



pratik-vm@pratikvm-Virtual-Machine:~$ 
pratik-vm@pratikvm-Virtual-Machine:~$ sudo mysql
[sudo] password for pratik-vm: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 34
Server version: 8.0.39-0ubuntu0.20.04.1 (Ubuntu)

Copyright (c) 2000, 2024, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| T1                 |
| chit10             |
| chit12             |
| chit16             |
| chit2              |
| chit3              |
| chit8              |
| demo               |
| exp_2              |
| exp_3              |
| information_schema |
| joint              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
15 rows in set (0.00 sec)

mysql> create database chit11;
Query OK, 1 row affected (0.09 sec)

mysql> use chit11;
Database changed
mysql> create table StudentMarks (Roll int primary key, Name varchar(30) not null, TotalMarks int not null);
Query OK, 0 rows affected (0.54 sec)

mysql> desc StudentMarks;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| Roll       | int         | NO   | PRI | NULL    |       |
| Name       | varchar(30) | NO   |     | NULL    |       |
| TotalMarks | int         | NO   |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> create table Result (Roll int primary key, Name varchar(30) not null, Class varchar(5));
Query OK, 0 rows affected (0.43 sec)

mysql> desc Result;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| Roll  | int         | NO   | PRI | NULL    |       |
| Name  | varchar(30) | NO   |     | NULL    |       |
| Class | varchar(5)  | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> insert into StudentMarks(Roll,Name,TotalMarks) values (23,'Bharat',788),(55,'Madhur',1400),(64,'Gaurav',989),(69,'MJ',600);
Query OK, 4 rows affected (0.07 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select * from StudentMarks;
+------+--------+------------+
| Roll | Name   | TotalMarks |
+------+--------+------------+
|   23 | Bharat |        788 |
|   55 | Madhur |       1400 |
|   64 | Gaurav |        989 |
|   69 | MJ     |        600 |
+------+--------+------------+
4 rows in set (0.00 sec)

mysql> delimiter #
mysql> 
mysql> create procedure proc_Grade(in marks int ,out class varchar(10))
    -> begin
    -> if marks<=1500 and marks>=990 then set class='DIST';
    -> end if;
    -> if marks<=989 and marks>=900 then set class='FC';
    -> end if;
    -> if marks<=889 and marks>=825 then set class='HSC';
    -> end if;
    -> if marks<=824 and marks>=750 then set class='SC';
    -> end if;
    -> if marks<=749 and marks>=650 then set class='PC';
    -> end if;
    -> if marks<=650 then set class='Fail';
    -> end if;
    -> end #
Query OK, 0 rows affected (0.14 sec)

mysql> 
mysql> create function Find_Result(Roll_In int) returns varchar(20) deterministic
    -> begin
    -> declare marks int;
    -> declare Grade varchar(5);
    -> declare StuName varchar(30);
    -> select StudentMarks.TotalMarks,StudentMarks.Name into marks,StuName from StudentMarks where StudentMarks.Roll=Roll_In;
    -> call proc_Grade(marks,@Grade);
    -> insert into Result values (Roll_In,StuName,@Grade);
    -> return @Grade;
    -> end #
Query OK, 0 rows affected (0.15 sec)

mysql> delimiter ;
mysql> select Find_Result (55);
+------------------+
| Find_Result (55) |
+------------------+
| DIST             |
+------------------+
1 row in set (0.12 sec)

mysql> select Find_Result (23);
+------------------+
| Find_Result (23) |
+------------------+
| SC               |
+------------------+
1 row in set (0.08 sec)

mysql> select Find_Result (64);
+------------------+
| Find_Result (64) |
+------------------+
| FC               |
+------------------+
1 row in set (0.08 sec)

mysql> select Find_Result (69);
+------------------+
| Find_Result (69) |
+------------------+
| Fail             |
+------------------+
1 row in set (0.13 sec)

mysql> select * from Result;
+------+--------+-------+
| Roll | Name   | Class |
+------+--------+-------+
|   23 | Bharat | SC    |
|   55 | Madhur | DIST  |
|   64 | Gaurav | FC    |
|   69 | MJ     | Fail  |
+------+--------+-------+
4 rows in set (0.00 sec)

mysql> 





